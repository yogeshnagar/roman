on:
  workflow_dispatch:
    inputs:
      env1:
        description: env1
        type: boolean
        required: false
      env2:
        description: env2
        type: boolean
        required: false
      env3:
        description: env3
        type: boolean
        required: false

jobs:
  setup-environments:
    runs-on: ubuntu-latest
    outputs:
      envs: ${{ steps.step_two.outputs.envs }}
    steps:
      - name: Set Environments
        id: set-environments
        shell: bash
        run: |
          function join { local IFS="$1"; shift; echo "$*" | tr -d '"'; }
          declare -A envArray=$(echo $INPUTS | jq 'to_entries | map(select(.value == true))[] | (.key)')
          echo "set-environments=$(join , ${envArray[@]})" >> $GITHUB_ENV
        env:
          INPUTS: ${{ toJSON(inputs) }}
      - name: Use the value
        id: step_two
        outputs:
          envs: ${{ env.set-environments }}
        run: |
          echo "${{ env.set-environments }}"
  example_matrix:
    runs-on: ubuntu-latest
    needs: [setup-environments]
    strategy:
      matrix:
        version: ${{ needs.setup-environments.outputs.envs }}
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.version }}
